import sun.management.DiagnosticCommandImpl

buildscript {
    ext {
        grailsVersion = project.grailsVersion
    }
    repositories {
        mavenLocal()
        maven { url "https://repo.grails.org/grails/core" }
    }
    dependencies {        
        classpath "org.grails:grails-gradle-plugin:$grailsVersion"
        classpath 'com.bertramlabs.plugins:asset-pipeline-gradle:2.5.0'
        classpath "org.grails.plugins:hibernate:4.3.10.5"
        classpath 'com.wiredforcode:gradle-heroku-plugin:1.0.0'
        classpath 'com.android.tools.build:gradle:1.2.3'
    }
}

plugins {
    id "io.spring.dependency-management" version "0.5.2.RELEASE"
}

version "0.1"
group "myapp"

apply plugin: "spring-boot"
apply plugin: "war"
apply plugin: "asset-pipeline"
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: "org.grails.grails-web"
apply plugin: "org.grails.grails-gsp"
apply plugin: 'java'
apply plugin: 'jetty'
apply plugin: 'application'


ext {
    grailsVersion = project.grailsVersion
    //gradleWrapperVersion = project.gradleWrapperVersion
}

assets {
    minifyJs = true
    minifyCss = true
}

repositories {
    mavenLocal()
    maven { url "https://repo.grails.org/grails/core" }
}

dependencyManagement {
    imports {
        mavenBom "org.grails:grails-bom:$grailsVersion"
    }
    applyMavenExclusions false
}

configurations{
    runtimeOnly
}

dependencies {
    compile "org.springframework.boot:spring-boot-starter-logging"
    compile "org.springframework.boot:spring-boot-starter-actuator"
    compile "org.springframework.boot:spring-boot-autoconfigure"
    compile "org.springframework.boot:spring-boot-starter-tomcat"
    compile "org.grails:grails-dependencies"
    compile "org.grails:grails-web-boot"

    compile "org.grails.plugins:hibernate"
    compile "org.grails.plugins:cache"
    compile "org.hibernate:hibernate-ehcache"
    compile "org.grails.plugins:scaffolding"

    runtime "org.grails.plugins:asset-pipeline"

    testCompile "org.grails:grails-plugin-testing"
    testCompile "org.grails.plugins:geb"

    // Note: It is recommended to update to a more robust driver (Chrome, Firefox etc.)
    testRuntime 'org.seleniumhq.selenium:selenium-htmlunit-driver:2.44.0'

    console "org.grails:grails-console"
    // to run our App on Heroku
    runtimeOnly "org.mortbay.jetty:jetty-runner:8.1.14.v20131031"
    // monitoring on Heroku
    runtimeOnly "com.newrelic.agent.java:newrelic-agent:2.18.0"
}

task runtimeOnly(type: JavaExec){
    main = "org.mortbay.jetty.runner.Runner"
    args = [war.archivePath]
    classpath configurations.runtimeOnly
}

//task wrapper(type: DiagnosticCommandImpl.Wrapper) {
//    gradleVersion = gradleWrapperVersion
//
//}

 defaultTasks "clean", "build", "installApp"

 task stage(dependsOn: ['clean', 'war','copyToLib'])



 task copyToLib << {
     copy{
         from configurations.runtimeOnly.copy().setTransitive(false)
         into "$buildDir/libs"
         rename {name ->
             def artifacts = configurations.runtimeOnly.resolvedConfiguration.resolvedArtifacts
             def artifact = artifacts.find{it.file.name==name}
             "${artifact.name}.${artifact.extension}"
         }
     }
 }

mainClassName = 'main.com.memorial.Memorial'


//apply plugin: 'com.android.application'

//android{
//    compileSdkVersion 22
//    buildToolsVersion "23.0.0 rc"
//}
//apply plugin: 'heroku'

//heroku{

//apikey '218144a0-c639-4219-8767-56e219e1ba1f'

//appName 'memorialtk'

//buildpack 'https://github.com/heroku/heroku-buildpack-gradle'

//}
